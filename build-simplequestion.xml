<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ @(#)build-simplequestion.xml
  ~ Copyright © 2020 Werner Randelshofer, Switzerland. MIT License.
  -->

<project name="SimpleQuestion" default="all" basedir="."
         xmlns:if="ant:if"
         xmlns:unless="ant:unless"
         xmlns:fx="javafx:com.sun.javafx.tools.ant"
>
    <target name="init">
        <!-- gobal build properties -->
        <property file="build.properties"/>

        <!-- properties for copyright and versioning -->
        <property name="name" value="${ant.project.name}"/>

        <!-- build properties -->
        <property name="lib" value="lib/compile"/>
        <property name="src" value="src/main/java"/>
        <property name="build" value="build"/>
        <property name="classes" value="${build}/classes"/>
        <property name="dist.dir" value="dist/simplequestion-${version}"/>
        <property name="javadoc" value="dist/SimpleQuestion ${version}/javadoc"/>
        <property name="modulepath" value="${lib}/JHotDraw-7.6"/>

        <condition property="jdk" value="${jdk.win}">
            <os family="windows" />
        </condition>
        <condition property="jdk" value="${jdk.mac}">
            <os family="unix" />
        </condition>
    </target>
    <target name="clean" depends="init">
        <delete dir="${classes}"/>
        <delete dir="${dist.dir}"/>
    </target>
    <target depends="init" description="Javadoc for my API." name="javadoc">
        <mkdir dir="${javadoc}"/>

        <dirset dir="${src}" id="module-dirs">
            <include name="*"/>
        </dirset>
        <pathconvert property="module-names" refid="module-dirs" pathsep=",">
            <map from="${basedir}/${src}/" to=""/>
        </pathconvert>
        <echo message="module-names: ${module-names}"/>

        <exec executable="javadoc">
            <arg line="-header &quot;SimpleQuestion ${version}&quot;"/>
            <arg line="-footer &quot;&lt;font size=-2>Copyright © ${author}.&lt;br>${license}.&lt;/font>&quot;"/>
            <arg line="-windowtitle &quot;SimpleQuestion ${version}&quot;"/>
            <arg line="-d &quot;${javadoc}&quot;"/>
            <arg line="--module-source-path &quot;${src}&quot;"/>
            <arg line="--module ${module-names}"/>
        </exec>
    </target>
    <target name="compile" depends="init,clean">
        <mkdir dir="${classes}"/>
        <javac destdir="${classes}"
               modulepath="${modulepath}"
               modulesourcepath="${src}"

               debug="${javac.debug}"
               optimize="${javac.optimize}"
               encoding="${javac.encoding}"
               includeantruntime="${javac.includeantruntime}"
               source="${javac.source}"
               target="${javac.target}"
        >
            <compilerarg value="-version"/>
            <compilerarg value="-Xlint:all"/>
            <include name="**/*.java"/>
        </javac>
        <copy todir="${classes}">
            <fileset dir="${src}">
                <exclude name="**/*.java"/>
                <exclude name="**/.*"/>
            </fileset>
        </copy>
    </target>

    <macrodef name="modular-jar">
        <attribute name="module"/>
        <attribute name="mainclass" default=""/>
        <sequential>
            <mkdir dir="${dist.dir}"/>
            <jar destfile="${dist.dir}/modules/@{module}.jar"
                 basedir="${classes}/@{module}"
            >

                <manifest>
                    <attribute name="Copyright" value="${author}"/>
                    <attribute name="License" value="${license}"/>
                    <attribute name="Implementation-Title" value="@{module}"/>
                    <attribute name="Implementation-Version" value="${version}"/>
                    <attribute name="Implementation-Vendor" value="${author}"/>
                    <attribute name="Specification-Title" value="@{module}"/>
                    <attribute name="Specification-Version" value="${version}"/>
                    <attribute name="Specification-Vendor" value="${author}"/>
                </manifest>
            </jar>
            <exec executable="${jdk}/bin/jar" unless:blank="@{mainclass}">
                <arg line="-f &quot;${dist.dir}/modules/@{module}.jar&quot;"/>
                <arg line="-u"/>
                <arg line="-e @{mainclass}"/>
                <arg line="--module-version ${version}"/>
            </exec>

            <jar destfile="${dist.dir}/sources/@{module}-src.jar"
                 basedir="${src}/@{module}"
            >
            </jar>
        </sequential>
    </macrodef>
    <target name="run" depends="init">
        <java module="ch.randelshofer.simplequestion" modulepath="${dist.dir}/modules" fork="true">
        </java>
    </target>

    <target name="jar" depends="init,compile,do-jar">
    </target>

    <target name="do-jar" depends="init">
        <modular-jar module="ch.randelshofer.simplequestion" mainclass="ch.randelshofer.simplequestion.Main"/>
        <modular-jar module="org.descheemaecker.nanoxml"/>
        <copy todir="${dist.dir}/modules">
            <fileset dir="${modulepath}">
            <include name="*.jar"/>
            <exclude name=".*"/>
            <exclude name="*-src.jar"/>
            </fileset>
        </copy>
    </target>

    <macrodef name="modular-bundle-mac">
        <attribute name="module"/>
        <attribute name="title"/>
        <attribute name="mainclass" default=""/>
        <sequential>
            <available file="${jpackage.mac}" property="jpackage.mac.exists"/>
            <sequential if:true="${jpackage.mac.exists}">
                <mkdir dir="${dist.dir}/bundles"/>
                <exec executable="${jpackage.mac}">
                    <env key="JAVA_HOME" path="${jdk.mac}"/>
                    <arg value="--dest"/>
                    <arg path="${dist.dir}/bundles"/>
                    <arg value="--name"/>
                    <arg value="@{title}"/>
                    <arg value="--module-path"/>
                    <arg path="${dist.dir}/modules"/>
                    <arg value="--module"/>
                    <arg value="@{module}"/>
                    <arg value="--app-version"/>
                    <arg value="${version}"/>
                    <arg value="--icon"/>
                    <arg value="${app.icon.mac}"/>
                    <arg value="--vendor"/>
                    <arg value="${author}"/>
                </exec>
            </sequential>
        </sequential>
    </macrodef>

    <macrodef name="modular-bundle-win">
        <attribute name="module"/>
        <attribute name="title"/>
        <attribute name="mainclass" default=""/>
        <sequential>
            <available file="${jpackage.win}" property="jpackage.win.exists"/>
            <sequential if:true="${jpackage.win.exists}">
                <mkdir dir="C:/bundles"/>
                <property environment="env"/>
                <exec executable="${jpackage.win}">
                    <env key="Path" value="${env.Path};${wix.win}"/>
                    <arg value="--dest"/>
                    <arg path="${dist.dir}/bundles"/>
                    <arg value="--name"/>
                    <arg value="@{title}"/>
                    <arg value="--module-path"/>
                    <arg path="${dist.dir}/modules"/>
                    <arg value="--module"/>
                    <arg value="@{module}"/>
                    <arg value="--app-version"/>
                    <arg value="${version}"/>
                    <arg value="--vendor"/>
                    <arg value="${author}"/>
                    <arg value="--type"/>
                    <arg value="msi"/>
                    <arg value="--win-shortcut"/>
                </exec>
            </sequential>
        </sequential>
    </macrodef>

    <target name="do-bundle-win" depends="init">
        <modular-bundle-win
                mainclass="ch.randelshofer.simplequestion.Main"
                module="ch.randelshofer.simplequestion"
                title="${name}"/>
    </target>

    <target name="do-bundle-mac" depends="init">
        <modular-bundle-mac
                mainclass="ch.randelshofer.simplequestion.Main"
                module="ch.randelshofer.simplequestion"
                title="${name}"/>
    </target>


    <target name="bundle" depends="jar,do-bundle-mac,do-bundle-win">
    </target>

    <target name="dist" depends="bundle">
    </target>

</project>
