/* * @(#)SequenceEnumeration.java * Copyright Â© 2020 Werner Randelshofer, Switzerland. MIT License. */package ch.randelshofer.util;import java.util.Enumeration;import java.util.NoSuchElementException;/** * This class Encapsulates two Enumerations. * * @author Werner Randelshofer, Staldenmattweg 2, Immensee, CH-6405, Switzerland * @version 1.0 2001-07-26 */public class SequenceEnumeration<E>        implements Enumeration<E> {    /**     * The first enumeration.     */    private Enumeration<E> first;    /**     * The second enumeration.     */    private Enumeration<E> second;    /**     * @param first  The first enumeration.     * @param second The second enumeration.     */    public SequenceEnumeration(Enumeration<E> first, Enumeration<E> second) {        this.first = first;        this.second = second;    }    /**     * Tests if this enumeration contains next element.     *     * @return <code>true</code> if this enumeration contains it     * <code>false</code> otherwise.     */    public boolean hasMoreElements() {        return first.hasMoreElements() || second.hasMoreElements();    }    /**     * Returns the next element of this enumeration.     *     * @return the next element of this enumeration.     * @throws NoSuchElementException if no more elements exist.     */    public synchronized E nextElement() {        if (first.hasMoreElements()) {            return first.nextElement();        } else {            return second.nextElement();        }    }}